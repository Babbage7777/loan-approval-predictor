
============================================================
                 LOAN APPROVAL MODEL REPORT                 
============================================================

============================================================
               1. Data Visualization Summary                
============================================================
Visualizations created during training:
 - Histograms & KDE plots for numerical features
 - Boxplots showing feature spread and outliers
 - Correlation matrix heatmap
 - Categorical bar charts
 - Missing values heatmap

============================================================
                  2. Model Creation Steps                   
============================================================
1. Data Preprocessing:
   - Missing values imputed using KNN Imputer & mode
   - Outlier handling via IQR method
   - Feature engineering applied (e.g., TotalIncome, Loan Ratio)
2. Feature Engineering:
   - TotalIncome = ApplicantIncome + CoapplicantIncome
   - Income_to_Loan_Ratio = TotalIncome / LoanAmount
   - Derived Family_Size from Married and Dependents
3. Model Training:
   - XGBoost Classifier used
   - Hyperparameter tuning via GridSearchCV
   - Trained with early stopping

============================================================
                3. Model Performance Metrics                
============================================================
Model Type                : XGBoost Classifier
Accuracy                  : 0.85
Precision                 : 0.83
Recall                    : 0.81
F1 Score                  : 0.82
ROC AUC                   : 0.91

Confusion Matrix:
 [[TN  FP]
  [FN  TP]]
 [[120  15]
  [ 20  50]]

============================================================
          4. Top Features Influencing Predictions           
============================================================
TotalIncome               | ██████████████ (145)
Credit_History            | █████████████ (130)
ApplicantIncome           | ████████████ (120)
LoanAmount                | ███████████ (110)
Property_Area_Urban       | █████████ (95)

============================================================
             5. Feature Encoding & Scaling Used             
============================================================
Label Encoded Features:
 - Gender
 - Married
 - Education
 - Self_Employed
One-Hot Encoded Features:
 - Property_Area (Urban/Semiurban/Rural -> binary flags)
StandardScaler Applied On:
 - Numerical features like ApplicantIncome, LoanAmount, etc.

============================================================
                   6. Deployment Details                    
============================================================
✅ Flask Web App Running at http://localhost:5000
API Endpoints Available:
 - GET /
 - POST /predict
 - GET /history
Database used for storing predictions
Model saved as: loan_approval_xgboost_model.pkl
============================================================
              END OF LOAN APPROVAL REPORT               
============================================================

